/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package lab9_reproductor;

import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.Timer;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.plaf.basic.BasicProgressBarUI;

/**
 *
 * @author jenniferbueso
 */
public class ReproductorVisual extends javax.swing.JFrame {
    private MusicPlayer player;
    private Timer timer;
    private JList<String> playlist;
    private DefaultListModel<String> listModel;

    public ReproductorVisual() {
        initComponents();

        player = new MusicPlayer();
        listModel = new DefaultListModel<>();
        playlist = new JList<>(listModel);
        jScrollPane1.setViewportView(playlist);
        
        initTimer();
        cancionLabel();
        loadSongsFromDefaultFolder();
    }

    public void initTimer() {
        JProgressBar.setUI(new BasicProgressBarUI() {
            protected Color getSelectionBackground() { return Color.WHITE; }
            protected Color getSelectionForeground() { return Color.BLUE; }
        });
        
        timer = new Timer(100, e -> {
            if (player.isPlaying()) {
                long currentSeconds = player.getCurrentMicroseconds() / 1_000_000;
                long totalSeconds = player.getTotalSeconds();
                int progress = (int) ((double) currentSeconds / totalSeconds * 100);
                JProgressBar.setValue(progress);
                
                long minutes = totalSeconds / 60;
                long seconds = totalSeconds % 60;
                DuracionLabel.setText(String.format("%02d:%02d", minutes, seconds));

                long currentMinutes = currentSeconds / 60;
                long currentSecondsRemaining = currentSeconds % 60;
                CurrentLabel.setText(String.format("%02d:%02d", currentMinutes, currentSecondsRemaining));
            }
        });
    }
    
    public void cancionLabel() {
        playlist.addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                int index = playlist.getSelectedIndex();
                if (index != -1) {
                    player.selectSong(index);
                    CancionNombreLabel.setText(listModel.getElementAt(index));
                    JProgressBar.setValue(0);
                }
            }
        });
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListaCanciones = new javax.swing.JList<>();
        BotonAgregarCancion = new javax.swing.JLabel();
        BotonPlay = new javax.swing.JLabel();
        JProgressBar = new javax.swing.JProgressBar();
        DuracionLabel = new javax.swing.JLabel();
        BotonStop = new javax.swing.JLabel();
        CurrentLabel = new javax.swing.JLabel();
        CancionNombreLabel = new javax.swing.JLabel();
        BotonPause = new javax.swing.JLabel();
        PortadaLabel = new javax.swing.JButton();
        Fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBorder(null);

        ListaCanciones.setBackground(new java.awt.Color(255, 255, 255));
        ListaCanciones.setFont(new java.awt.Font("Avenir Next Condensed", 1, 18)); // NOI18N
        ListaCanciones.setForeground(new java.awt.Color(0, 0, 0));
        ListaCanciones.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane1.setViewportView(ListaCanciones);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 150, 330, 320));

        BotonAgregarCancion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonAgregarCancion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonAgregarCancionMouseClicked(evt);
            }
        });
        jPanel1.add(BotonAgregarCancion, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 440, 40, 40));

        BotonPlay.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonPlay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonPlayMouseClicked(evt);
            }
        });
        jPanel1.add(BotonPlay, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 370, 60, 60));

        JProgressBar.setBackground(new java.awt.Color(255, 255, 255));
        JProgressBar.setForeground(new java.awt.Color(51, 51, 255));
        jPanel1.add(JProgressBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(77, 290, 400, 30));

        DuracionLabel.setFont(new java.awt.Font("Avenir Next Condensed", 1, 18)); // NOI18N
        DuracionLabel.setForeground(new java.awt.Color(0, 0, 0));
        DuracionLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        DuracionLabel.setText("-:--");
        jPanel1.add(DuracionLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(417, 330, 60, 30));

        BotonStop.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonStop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonStopMouseClicked(evt);
            }
        });
        jPanel1.add(BotonStop, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 380, 50, 40));

        CurrentLabel.setFont(new java.awt.Font("Avenir Next Condensed", 1, 18)); // NOI18N
        CurrentLabel.setForeground(new java.awt.Color(0, 0, 0));
        CurrentLabel.setText("-:--");
        jPanel1.add(CurrentLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 330, 60, 30));

        CancionNombreLabel.setFont(new java.awt.Font("Avenir Next Condensed", 1, 24)); // NOI18N
        CancionNombreLabel.setForeground(new java.awt.Color(0, 0, 0));
        CancionNombreLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CancionNombreLabel.setText("No Song Selected");
        jPanel1.add(CancionNombreLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 239, 400, 40));

        BotonPause.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonPause.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonPauseMouseClicked(evt);
            }
        });
        jPanel1.add(BotonPause, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 380, 50, 40));

        PortadaLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elementos/Portada.png"))); // NOI18N
        PortadaLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PortadaLabelActionPerformed(evt);
            }
        });
        jPanel1.add(PortadaLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, 200, 190));

        Fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elementos/Reproductor de MÃºsica Visual.png"))); // NOI18N
        jPanel1.add(Fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void loadSongsFromDefaultFolder() {
        File musicFolder = new File("src/Music");
        if (musicFolder.exists() && musicFolder.isDirectory()) {
            File[] files = musicFolder.listFiles((dir, name) -> name.toLowerCase().endsWith(".wav"));
            if (files != null) {
                for (File file : files) {
                    if (file.exists()) { // Verificar si el archivo existe
                        listModel.addElement(file.getName().replace(".wav", ""));
                        player.addSong(file.getAbsolutePath(), null);
                    }
                }
            }
        }
    }
    
    private void BotonAgregarCancionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonAgregarCancionMouseClicked
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setFileFilter(new FileNameExtensionFilter("WAV files", "wav"));
        int returnValue = fileChooser.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            File musicFolder = new File("src/Music");
            if (!musicFolder.exists()) {
                musicFolder.mkdirs();
            }
            File newFile = new File(musicFolder, selectedFile.getName());
            try {
                Files.copy(selectedFile.toPath(), newFile.toPath(), StandardCopyOption.REPLACE_EXISTING);
                // Seleccionar la carÃ¡tula
                JFileChooser coverFileChooser = new JFileChooser();
                coverFileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
                coverFileChooser.setFileFilter(new FileNameExtensionFilter("Image files", "jpg", "png", "jpeg"));
                int coverReturnValue = coverFileChooser.showOpenDialog(null);
                if (coverReturnValue == JFileChooser.APPROVE_OPTION) {
                    File selectedCoverFile = coverFileChooser.getSelectedFile();
                    File coverFolder = new File("src/Images");
                    if (!coverFolder.exists()) {
                        coverFolder.mkdirs();
                    }
                    File newCoverFile = new File(coverFolder, selectedCoverFile.getName());
                    Files.copy(selectedCoverFile.toPath(), newCoverFile.toPath(), StandardCopyOption.REPLACE_EXISTING);
                    listModel.addElement(selectedFile.getName().replace(".wav", ""));
                    // Agregar la canciÃ³n con su carÃ¡tula
                    player.addSong(newFile.getAbsolutePath(), newCoverFile.getAbsolutePath());
                } else {
                    // Si no se selecciona una carÃ¡tula, agregar la canciÃ³n sin carÃ¡tula
                    listModel.addElement(selectedFile.getName().replace(".wav", ""));
                    player.addSong(newFile.getAbsolutePath(), null);
                }
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_BotonAgregarCancionMouseClicked

    private void BotonPlayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonPlayMouseClicked
        int selectedIndex = playlist.getSelectedIndex();
            if (selectedIndex != -1) {
                player.selectSong(selectedIndex);
                player.play();
                updateProgressBar();
                player.updateCoverImage(PortadaLabel);
            } else {
                JOptionPane.showMessageDialog(this, "No hay canciÃ³n seleccionada.", "Error", JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_BotonPlayMouseClicked

    private void BotonPauseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonPauseMouseClicked
        if (player.isPlaying()) {
            player.pause();
        } else {
            player.resume();
        }
    }//GEN-LAST:event_BotonPauseMouseClicked

    private void BotonStopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonStopMouseClicked
        player.stop();
        JProgressBar.setValue(0);
        if (timer.isRunning()) {
            timer.stop();
        }
    }//GEN-LAST:event_BotonStopMouseClicked

    private void PortadaLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PortadaLabelActionPerformed
     
    }//GEN-LAST:event_PortadaLabelActionPerformed

    private void updateProgressBar() {
        if (!timer.isRunning()) {
            timer.start();
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReproductorVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReproductorVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReproductorVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReproductorVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReproductorVisual().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BotonAgregarCancion;
    private javax.swing.JLabel BotonPause;
    private javax.swing.JLabel BotonPlay;
    private javax.swing.JLabel BotonStop;
    private javax.swing.JLabel CancionNombreLabel;
    private javax.swing.JLabel CurrentLabel;
    private javax.swing.JLabel DuracionLabel;
    private javax.swing.JLabel Fondo;
    private javax.swing.JProgressBar JProgressBar;
    private javax.swing.JList<String> ListaCanciones;
    private javax.swing.JButton PortadaLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
